//LAB-ASSIGNMENT - 6

LXI SP,7FFFH
LXI H,4000H
MVI D,03H
L1:CALL CONVERT
MVI H,50H
MOV M,C
MVI H,40H
INX H
DCR D
JNZ L1
LXI H,4200H
MVI D,03H
L2:CALL CONVERT
MVI H,51H
MOV M,C
MVI H,42H
INX H
DCR D
JNZ L2
LXI H,5000H
MVI B,03H
LXI D,0000H
L3:CALL MULFPNUM
INX H
DCR B
JNZ L3
MVI B,03H
LXI H,6000H
L4:MOV A,M
RAL
JNC LETGO
RAR
ANI 7FH
CMA
MOV M,A
INR H
MOV A,M
CMA 
ADI 01H
JNC DGF
DCR H
MOV A,M
ADI 01H
MOV M,A
INR H
DGF:INX H
DCR H
DCR B
JNZ L4
JMP NEXT
LETGO:RAR
INX H
DCR B
JNZ L4
NEXT:LXI H,6100H
CALL ADDFPNUM

HLT

//SLICING 8 BIT INTEGER PART AND AND 8 BIT FRACTION PART TO FORM A SINGLE 8 BIT NUMBER WHERE UPPER NIBBLE REPRESENTS INTEGER PART AND LOWER NIBBLE REPRESENTS FRACTION PART
CONVERT:MOV A,M
RAL
JNC SKIP
MVI B,80H
SKIP: RAL 
RAL
RAL
ANI F0H
MOV C,A
INR H
MOV A,M
RAR
RAR
RAR
RAR
ANI 0FH
ADD C
ADD B
MOV C,A
MVI B,00H
RET 
//SUBROUTINE FOR ADDING FIXED POINT NUMBERS
ADDFPNUM:
MOV D,M
INX H
MOV E,M
INX H
MOV A,M
ADD D
ADD E
JNC ROL
MVI B,01H
ROL:LXI H,7100H
MOV M,A
MVI H,60H
MOV D,M
INX H
MOV E,M
INX H
MOV A,M
ADD D
ADD E
ADD B
MVI B,00H
LXI H,7000H
MOV M,A
RET
//SUBROUTINE FOR MULTIPLYING FIXED POINT NUMBERS
MULFPNUM:PUSH B
MVI B,00H
INR H
MOV E,M
MVI D,00H
DCR H
MOV A,M
XRA E
RAL
JNC PN
MVI B,80H
PN:MOV A,E
ANI 7FH
MOV E,A
MOV A,M
ANI 7FH 
MVI C,08H
PUSH H
LXI H,0000H
LOOP: RRC
JNC PASS
DAD D
PASS:XCHG
DAD H
XCHG
DCR C
JNZ LOOP
XCHG
POP H
MVI H,60H
MOV A,D
ORA B
MOV M,A
INR H
MOV M,E
POP B
MVI H,50H
RET

//FINAL OUTPUT, THE INNER PRODUCT OF VECTOR X AND VECTOR Y IS STORED AT 7000H-INTEGER VALUE AND 71000H-FRACTIONAL VALUE


//INTEGER PARTS OF VECTOR X
#ORG 4000H
#DB 03H,82H,01H
//FRACTION PARTS OF VECTOR X
#ORG 4100H
#DB 33H,19H,19H
//INTEGER PARTS OF VECTOR Y
#ORG 4200H
#DB 82H,81H,03H
//FRACTION PARTS OF VECTOR Y
#ORG 4300H
#DB 80H,80H,33H
